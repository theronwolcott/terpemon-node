<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Terp√©mon</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    #map {
      height: 100vh;
      width: 100%;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    // Initialize the map
    const map = L.map('map').setView([0, 0], 16); // Default view until location is retrieved
  
    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
  
    // Function to add creature markers to the map
    function addCreatureMarkers(creatures) {
      creatures.forEach(creature => {
        const markerIcon = L.icon({
          iconUrl: `/images/species/${creature.id}.png`, // Assuming images are named after creature names
          iconSize: [70, 70], // Adjust size as needed
          iconAnchor: [35, 35], // Anchor at the bottom center
          popupAnchor: [0, -35] // Popup just above the icon
        });
  
        // Add marker to the map
        L.marker([creature.lat, creature.lng], { icon: markerIcon })
          .addTo(map)
          .bindPopup(`<b>${creature.name}</b>`); // Display creature name in the popup
      });
    }
  
    // Request location permissions and fetch creature data
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        async (position) => {
          const { latitude, longitude } = position.coords;
  
          map.setView([latitude, longitude], 15); // Center the map at the user's location
  
          try {
            const response = await fetch('/creatures/get-by-lat-lng', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                lat: latitude,
                lng: longitude,
                userId: 'user123' // Replace with the actual userId
              })
            });
  
            if (!response.ok) {
              throw new Error('Failed to fetch creatures');
            }
  
            const creatures = await response.json();
            addCreatureMarkers(creatures); // Add creatures to the map
          } catch (error) {
            console.error('Error fetching creatures:', error);
          }
        },
        (error) => {
          console.error('Error getting location:', error);
          alert('Unable to retrieve your location.');
        }
      );
    } else {
      alert('Geolocation is not supported by your browser.');
    }
  </script>
  </body>
</html>
